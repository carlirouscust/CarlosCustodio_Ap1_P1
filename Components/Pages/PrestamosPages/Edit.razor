@page "/Prestamos/Edit/{PrestamoId:int}"
@rendermode InteractiveServer
@inject PrestamosService prestamosService
@inject NavigationManager navigationManager

<PageTitle>Editar Prestamo</PageTitle>

<EditForm Model="prestamo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white" style="text-align: center;">
            <h5 class="fas fa-clipboard-list">Editar prestamo</h5>
        </div>

        <div class="card-body">     
            @*Deudor*@
            <div class="mb-3">
                <label for="Deudor" class="form-label">Deudor:</label>
                <InputSelect @bind-Value="prestamo.deudorId" class="form-select" aria-label="deudorId">
                    <option value="0">Seleccione un deudor</option>
                    @foreach (var item in ListaDeudores)
                    {
                        <option value="@item.deudorId">@item.Nombres</option>
                    }
                </InputSelect>
            </div>

            @*Concepto*@
            <div class="mb-3">
                <label for="Concepto" class="form-label">Concepto:</label>
                <InputText @bind-Value="prestamo.concepto" class="form-control" />
                <ValidationMessage For="@(() => prestamo.concepto)" />
            </div>

            @* Monto *@
            <div class="mb-3">
                <label for="Concepto" class="form-label">Monto:</label>
                <InputNumber @bind-Value="prestamo.monto" class="form-control" />
                <ValidationMessage For="@(() => prestamo.monto)" />
            </div>
        </div>

        <div class="card-footer text-center">
            <div class="btn-group">
                <button type="submit" class="btn btn-primary"<span class="bi bi-floppy mt-3"></span>Guardar</button>
                <a href="/Prestamos/Index" class="btn btn-primary" type="button">
                    <span class="bi bi-arrow-left mt-3"></span> Volver
                </a>
            </div>
    </div>

    @if (Validacion)
    {
        <div class="alert alert-success text-center" role="alert">
            El Prestamo se a modificado con exito.
            Dele al boton volver para retornar a la consulta.
        </div>
    }
   </div>



</EditForm>

@code {
    [Parameter]
    public int PrestamoId { get; set; }
    public Prestamos? prestamo { get; set; } = new Prestamos();
    public List<Deudores> ListaDeudores { get; set; } = new List<Deudores>();
    private bool Validacion;
    private bool existe = false;

    public async Task Nuevo()
    {
        prestamo = new Prestamos();
        existe = false;
    }
    protected override async Task OnInitializedAsync()
    {
        prestamo = await prestamosService.Buscar(PrestamoId);
        ListaDeudores = await prestamosService.ObtenerDeudores();
    }

    public async Task Buscar()
    {
        existe = false;
        var encontrado = await prestamosService.Buscar(prestamo.prestamoId);
        if (encontrado != null)
        {
            prestamo = encontrado;
        }
        else
        {
            Nuevo();
        }
    }

    public async Task Guardar()
    {        
        var guardado = await prestamosService.Guardar(prestamo);
        if (guardado)
        {
            navigationManager.NavigateTo("/Prestamos/Index");
        }
    }

}
